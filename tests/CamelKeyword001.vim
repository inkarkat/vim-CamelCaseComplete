" Test: Completion of CamelKeyword words.

runtime tests/helpers/completetest.vim
call vimtest#StartTap()
call vimtap#Plan(125)
edit CamelKeyword.txt

set completefunc=CamelCaseComplete#CamelCaseComplete
set iskeyword+=#

call IsMatchesInIsolatedLine('',      ['#hugo_jack', '#interLeaf', 'single#sake_dross', 'tingle#sakeDrosss', 'single#lake_dros_repatable', 'tingle#lakeDrossRepeatable', 'upeatable_mapping#fake', 'xepeatableMapping#fake', 'upeatable_mapping#take_cros', 'xepeatableMapping#takeBross', 'upeatable_mapping#make_cros_repatable', 'xepeatableMapping#makeBrossRepeatable'], 'all matches')

call IsMatchesInIsolatedLine('l',     [], 'no matches for l')
call IsMatchesInIsolatedLine('lr',    [], 'no matches for lr')
call IsMatchesInIsolatedLine('ldr',   [], 'no matches for ldr')

call IsMatchesInIsolatedLine('#',     ['#hugo_jack', '#interLeaf'], 'relaxed matches for #')
call IsMatchesInIsolatedLine('#h',    ['#hugo_jack'], 'relaxed matches for #h')
call IsMatchesInIsolatedLine('#i',    ['#interLeaf'], 'relaxed matches for #i')
call IsMatchesInIsolatedLine('#j',    ['#hugo_jack'], 'relaxed matches for #j')
call IsMatchesInIsolatedLine('#l',    ['#interLeaf'], 'relaxed matches for #l')
call IsMatchesInIsolatedLine('#hj',   ['#hugo_jack'], 'strict matches for #hj')
call IsMatchesInIsolatedLine('#il',   ['#interLeaf'], 'strict matches for #il')

call IsMatchesInIsolatedLine('sf',    ['single#fake'], 'strict keyword match with sf')

call IsMatchesInIsolatedLine('s',     ['single#sake_dross', 'single#lake_dros_repatable'], 'relaxed underscore matches for s')
call IsMatchesInIsolatedLine('t',     ['tingle#sakeDrosss', 'tingle#lakeDrossRepeatable'], 'relaxed Camel matches for t')
call IsMatchesInIsolatedLine('s#',    ['single#sake_dross', 'single#lake_dros_repatable'], 'relaxed underscore matches for s#')
call IsMatchesInIsolatedLine('t#',    ['tingle#sakeDrosss', 'tingle#lakeDrossRepeatable'], 'relaxed Camel matches for t#')
call IsMatchesInIsolatedLine('ss',    ['single#sake_dross'], 'relaxed underscore matches for ss')
call IsMatchesInIsolatedLine('ts',    ['tingle#sakeDrosss'], 'relaxed Camel matches for ts')
call IsMatchesInIsolatedLine('s#s',   ['single#sake_dross'], 'relaxed underscore matches for s#s')
call IsMatchesInIsolatedLine('t#s',   ['tingle#sakeDrosss'], 'relaxed Camel matches for t#s')
call IsMatchesInIsolatedLine('s#d',   ['single#sake_dross', 'single#lake_dros_repatable'], 'relaxed underscore matches for s#d')
call IsMatchesInIsolatedLine('t#d',   ['tingle#sakeDrosss', 'tingle#lakeDrossRepeatable'], 'relaxed Camel matches for t#d')

" Special case: These treat "single#sake" as one underscore fragment.
call IsMatchesInIsolatedLine('sd',    ['single#sake_dross'], 'strict underscore matches for sd')
call IsMatchesInIsolatedLine('td',    ['tingle#sakeDrosss'], 'strict Camel matches for td')

call IsMatchesInIsolatedLine('s#r',   ['single#lake_dros_repatable'], 'relaxed underscore matches for s#r')
call IsMatchesInIsolatedLine('t#r',   ['tingle#lakeDrossRepeatable'], 'relaxed Camel matches for t#r')
call IsMatchesInIsolatedLine('sr',    ['single#lake_dros_repatable'], 'relaxed underscore matches for sr')
call IsMatchesInIsolatedLine('tr',    ['tingle#lakeDrossRepeatable'], 'relaxed Camel matches for tr')
call IsMatchesInIsolatedLine('sdr',   ['single#lake_dros_repatable'], 'relaxed underscore matches for sdr')
call IsMatchesInIsolatedLine('tdr',   ['tingle#lakeDrossRepeatable'], 'relaxed Camel matches for tdr')
call IsMatchesInIsolatedLine('sl',    ['single#lake_dros_repatable'], 'relaxed underscore matches for sl')
call IsMatchesInIsolatedLine('tl',    ['tingle#lakeDrossRepeatable'], 'relaxed Camel matches for tl')
call IsMatchesInIsolatedLine('slr',   ['single#lake_dros_repatable'], 'relaxed underscore matches for slr')
call IsMatchesInIsolatedLine('tlr',   ['tingle#lakeDrossRepeatable'], 'relaxed Camel matches for tlr')
call IsMatchesInIsolatedLine('sld',   ['single#lake_dros_repatable'], 'relaxed underscore matches for sld')
call IsMatchesInIsolatedLine('tld',   ['tingle#lakeDrossRepeatable'], 'relaxed Camel matches for tld')
call IsMatchesInIsolatedLine('s#l',   ['single#lake_dros_repatable'], 'relaxed underscore matches for s#l')
call IsMatchesInIsolatedLine('t#l',   ['tingle#lakeDrossRepeatable'], 'relaxed Camel matches for t#l')
call IsMatchesInIsolatedLine('s#lr',  ['single#lake_dros_repatable'], 'relaxed underscore matches for s#lr')
call IsMatchesInIsolatedLine('t#lr',  ['tingle#lakeDrossRepeatable'], 'relaxed Camel matches for t#lr')
call IsMatchesInIsolatedLine('s#ld',  ['single#lake_dros_repatable'], 'relaxed underscore matches for s#ld')
call IsMatchesInIsolatedLine('t#ld',  ['tingle#lakeDrossRepeatable'], 'relaxed Camel matches for t#ld')

call IsMatchesInIsolatedLine('sldr',  ['single#lake_dros_repatable'], 'strict underscore matches for sldr')
call IsMatchesInIsolatedLine('tldr',  ['tingle#lakeDrossRepeatable'], 'strict Camel matches for tldr')
call IsMatchesInIsolatedLine('s#ldr', ['single#lake_dros_repatable'], 'strict underscore matches for s#ldr')
call IsMatchesInIsolatedLine('t#ldr', ['tingle#lakeDrossRepeatable'], 'strict Camel matches for t#ldr')

call IsMatchesInIsolatedLine('m',     [], 'no matches for m')
call IsMatchesInIsolatedLine('m#',    [], 'no matches for m#')
call IsMatchesInIsolatedLine('m#f',   [], 'no matches for m#f')
call IsMatchesInIsolatedLine('m#t',   [], 'no matches for m#t')
call IsMatchesInIsolatedLine('m#tc',  [], 'no matches for m#tc')
call IsMatchesInIsolatedLine('m#tb',  [], 'no matches for m#tb')
call IsMatchesInIsolatedLine('m#mcr', [], 'no matches for m#mcr')
call IsMatchesInIsolatedLine('#mcr',  [], 'no matches for #mcr')
call IsMatchesInIsolatedLine('mcr',   [], 'no matches for mcr')
call IsMatchesInIsolatedLine('cr',    [], 'no matches for cr')
call IsMatchesInIsolatedLine('r',     [], 'no matches for r')

call IsMatchesInIsolatedLine('uf',    ['upeatable_mapping#fake'], 'relaxed keyword match with uf')
call IsMatchesInIsolatedLine('xf',    ['xepeatableMapping#fake'], 'relaxed keyword match with xf')
call IsMatchesInIsolatedLine('umf',   ['upeatable_mapping#fake'], 'strict keyword match with umf')
call IsMatchesInIsolatedLine('xmf',   ['xepeatableMapping#fake'], 'strict keyword match with xmf')
call IsMatchesInIsolatedLine('mf',    [], 'no matches for mf')
call IsMatchesInIsolatedLine('#f',    [], 'no matches for #f')

call IsMatchesInIsolatedLine('u',     ['upeatable_mapping#fake', 'upeatable_mapping#take_cros', 'upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for u')
call IsMatchesInIsolatedLine('x',     ['xepeatableMapping#fake', 'xepeatableMapping#takeBross', 'xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for x')
call IsMatchesInIsolatedLine('um',    ['upeatable_mapping#fake'], 'relaxed underscore matches for um')
call IsMatchesInIsolatedLine('xm',    ['xepeatableMapping#fake'], 'relaxed CamelCase matches for xm')

call IsMatchesInIsolatedLine('u#',    ['upeatable_mapping#take_cros', 'upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for u#')
call IsMatchesInIsolatedLine('x#',    ['xepeatableMapping#takeBross', 'xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for x#')
call IsMatchesInIsolatedLine('um#',   ['upeatable_mapping#take_cros', 'upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for um#')
call IsMatchesInIsolatedLine('xm#',   ['xepeatableMapping#takeBross', 'xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for xm#')
call IsMatchesInIsolatedLine('um#c',  ['upeatable_mapping#take_cros', 'upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for um#c')
call IsMatchesInIsolatedLine('xm#b',  ['xepeatableMapping#takeBross', 'xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for xm#b')
call IsMatchesInIsolatedLine('u#c',   ['upeatable_mapping#take_cros', 'upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for u#c')
call IsMatchesInIsolatedLine('x#b',   ['xepeatableMapping#takeBross', 'xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for x#b')
call IsMatchesInIsolatedLine('uc',    ['upeatable_mapping#take_cros', 'upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for uc')
call IsMatchesInIsolatedLine('xb',    ['xepeatableMapping#takeBross', 'xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for xb')

" Special case: This treats "mapping#take" as one underscore fragment.
call IsMatchesInIsolatedLine('umc',   ['upeatable_mapping#take_cros'], 'strict underscore matches for umc')
" Special case: This treats "Mapping#take" as one CamelCase fragment.
call IsMatchesInIsolatedLine('xmb',   ['xepeatableMapping#takeBross'], 'strict CamelCase matches for xmb')

call IsMatchesInIsolatedLine('um#t',  ['upeatable_mapping#take_cros'], 'relaxed underscore matches for um#t')
call IsMatchesInIsolatedLine('xm#t',  ['xepeatableMapping#takeBross'], 'relaxed CamelCase matches for xm#t')
call IsMatchesInIsolatedLine('u#t',   ['upeatable_mapping#take_cros'], 'relaxed underscore matches for u#t')
call IsMatchesInIsolatedLine('x#t',   ['xepeatableMapping#takeBross'], 'relaxed CamelCase matches for x#t')
call IsMatchesInIsolatedLine('ut',    ['upeatable_mapping#take_cros'], 'relaxed underscore matches for u#c')
call IsMatchesInIsolatedLine('xt',    ['xepeatableMapping#takeBross'], 'relaxed CamelCase matches for x#b')

call IsMatchesInIsolatedLine('umt',   ['upeatable_mapping#take_cros'], 'relaxed underscore matches for umt')
call IsMatchesInIsolatedLine('xmt',   ['xepeatableMapping#takeBross'], 'relaxed CamelCase matches for xmt')

call IsMatchesInIsolatedLine('umtc',  ['upeatable_mapping#take_cros'], 'strict underscore matches for umtc')
call IsMatchesInIsolatedLine('xmtb',  ['xepeatableMapping#takeBross'], 'strict CamelCase matches for xmtb')
call IsMatchesInIsolatedLine('um#tc', ['upeatable_mapping#take_cros'], 'strict underscore matches for um#tc')
call IsMatchesInIsolatedLine('xm#tb', ['xepeatableMapping#takeBross'], 'strict CamelCase matches for xm#tb')

call IsMatchesInIsolatedLine('ur',    ['upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for ur')
call IsMatchesInIsolatedLine('xr',    ['xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for xr')
call IsMatchesInIsolatedLine('umr',   ['upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for umr')
call IsMatchesInIsolatedLine('xbr',   ['xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for xbr')
call IsMatchesInIsolatedLine('ummr',  ['upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for ummr')
call IsMatchesInIsolatedLine('xmbr',  ['xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for xmbr')
call IsMatchesInIsolatedLine('um#mr', ['upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for um#mr')
call IsMatchesInIsolatedLine('xm#mr', ['xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for xm#mr')
call IsMatchesInIsolatedLine('umcr',  ['upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for umcr')
call IsMatchesInIsolatedLine('xmbr',  ['xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for xmbr')
call IsMatchesInIsolatedLine('um#cr', ['upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for um#cr')
call IsMatchesInIsolatedLine('xm#br', ['xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for xm#br')
call IsMatchesInIsolatedLine('ucr',   ['upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for ucr')
call IsMatchesInIsolatedLine('xbr',   ['xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for xbr')
call IsMatchesInIsolatedLine('u#mcr', ['upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for u#mcr')
call IsMatchesInIsolatedLine('x#mbr', ['xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for x#mbr')
call IsMatchesInIsolatedLine('u#cr',  ['upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for u#cr')
call IsMatchesInIsolatedLine('x#br',  ['xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for x#br')
call IsMatchesInIsolatedLine('u#r',   ['upeatable_mapping#make_cros_repatable'], 'relaxed underscore matches for u#r')
call IsMatchesInIsolatedLine('x#r',   ['xepeatableMapping#makeBrossRepeatable'], 'relaxed CamelCase matches for x#r')

call IsMatchesInIsolatedLine('ummcr', ['upeatable_mapping#make_cros_repatable'], 'strict underscore matches for ummcr')
call IsMatchesInIsolatedLine('xmmbr', ['xepeatableMapping#makeBrossRepeatable'], 'strict CamelCase matches for xmmbr')
call IsMatchesInIsolatedLine('um#mcr',['upeatable_mapping#make_cros_repatable'], 'strict underscore matches for um#mcr')
call IsMatchesInIsolatedLine('xm#mbr',['xepeatableMapping#makeBrossRepeatable'], 'strict CamelCase matches for xm#mbr')

call IsMatchesInIsolatedLine('u#k',   [], 'no matches for u#k')
call IsMatchesInIsolatedLine('x#k',   [], 'no matches for x#k')
call IsMatchesInIsolatedLine('um#k',  [], 'no matches for um#k')
call IsMatchesInIsolatedLine('xm#k',  [], 'no matches for xm#k')
call IsMatchesInIsolatedLine('u#kc',  [], 'no matches for u#kc')
call IsMatchesInIsolatedLine('x#kb',  [], 'no matches for x#kb')
call IsMatchesInIsolatedLine('u#kcr', [], 'no matches for u#kcr')
call IsMatchesInIsolatedLine('x#kbr', [], 'no matches for x#kbr')
call IsMatchesInIsolatedLine('um#k',  [], 'no matches for um#k')
call IsMatchesInIsolatedLine('xm#k',  [], 'no matches for xm#k')

call vimtest#Quit()
